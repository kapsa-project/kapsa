# Default values for Kapsa

# Operator configuration
operator:
  # Container image for the Kapsa operator
  image:
    repository: ghcr.io/yourorg/kapsa-operator
    tag: "0.1.0"
    pullPolicy: IfNotPresent

  # Number of operator replicas (use 1 for leader election)
  replicas: 1

  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Node selector for operator pod
  nodeSelector: {}

  # Tolerations for operator pod
  tolerations: []

  # Affinity rules for operator pod
  affinity: {}

  # Logging configuration
  logging:
    level: info  # debug, info, warning, error
    format: json  # json or text

  # Reconciliation settings
  reconciliation:
    # Default git poll interval (seconds) if not specified in Project
    defaultPollInterval: 300
    # Resync period for all resources (seconds)
    resyncPeriod: 600

  # Metrics and monitoring
  metrics:
    enabled: true
    port: 8080
    path: /metrics

  # Service account configuration
  serviceAccount:
    create: true
    name: kapsa-operator
    annotations: {}

# Namespace configuration
namespace:
  create: true
  name: kapsa-system

# RBAC configuration
rbac:
  create: true

# CRD installation
crds:
  # Install CRDs with Helm (set to false if managing CRDs separately)
  install: true
  # Keep CRDs on chart uninstall (recommended for production)
  keep: true

# kpack configuration (if bundled as dependency)
kpack:
  enabled: true
  # If kpack is pre-installed, Kapsa will use it
  # namespace: kpack

# cert-manager configuration (if bundled as dependency)
certManager:
  enabled: true
  # If cert-manager is pre-installed, Kapsa will use it
  # namespace: cert-manager
  installCRDs: true

# Default DomainPool (optional - can be created post-install)
# Uncomment and configure to create a default DomainPool
# defaultDomainPool:
#   enabled: false
#   name: default
#   baseDomains:
#     - apps.example.com
#   certManager:
#     issuerRef:
#       name: letsencrypt-prod
#       kind: ClusterIssuer
#     challengeType: http01

# Default Registry (optional - can be created post-install)
# Uncomment and configure to create a default Registry
# defaultRegistry:
#   enabled: false
#   name: default
#   type: docker  # harbor, gitlab, docker, ecr, gcr, acr
#   endpoint: https://index.docker.io/v1/
#   auth:
#     secretName: registry-credentials

# Monitoring and observability
monitoring:
  # Create ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

  # Create PodMonitor for Prometheus Operator
  podMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

# Security context
securityContext:
  operator:
    runAsNonRoot: true
    runAsUser: 65532
    fsGroup: 65532
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault

# Global settings
global:
  # Image pull secrets for all images
  imagePullSecrets: []
