Thank you for installing {{ .Chart.Name }}!

Your release is named {{ .Release.Name }}.

Kapsa operator has been deployed to namespace: {{ .Values.namespace.name }}

To get started:

1. Verify the operator is running:
   kubectl get pods -n {{ .Values.namespace.name }}

2. Check CRDs are installed:
   kubectl get crds | grep kapsa.io

{{- if not .Values.kpack.enabled }}

3. ⚠️  IMPORTANT: kpack is required but not installed as a dependency.
   Install kpack manually:
   kubectl apply -f https://github.com/buildpacks-community/kpack/releases/download/v0.13.3/release-0.13.3.yaml

{{- end }}

{{- if not .Values.certManager.enabled }}

4. ⚠️  IMPORTANT: cert-manager is required but not installed as a dependency.
   Install cert-manager manually:
   kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.0/cert-manager.yaml

{{- end }}

Next steps:

1. Create a DomainPool (platform admin):
   kubectl apply -f - <<EOF
   apiVersion: kapsa.io/v1alpha1
   kind: DomainPool
   metadata:
     name: default
   spec:
     baseDomains:
       - apps.example.com
     certManager:
       issuerRef:
         name: letsencrypt-prod
         kind: ClusterIssuer
       challengeType: http01
   EOF

2. Create a Registry (platform admin):
   kubectl apply -f - <<EOF
   apiVersion: kapsa.io/v1alpha1
   kind: Registry
   metadata:
     name: default
   spec:
     type: docker
     endpoint: https://index.docker.io/v1/
     auth:
       secretRef:
         name: registry-credentials
   EOF

3. Create your first Project (developer):
   kubectl apply -f - <<EOF
   apiVersion: kapsa.io/v1alpha1
   kind: Project
   metadata:
     name: my-app
   spec:
     repository:
       url: https://github.com/example/my-app
       branch: main
     build:
       strategy: buildpack
     registry:
       name: default
       imageRepository: myorg/my-app
     domain:
       subdomain: my-app
       domainPoolRef: default
     environments:
       - name: prod
         branch: main
         autoSync: true
   EOF

Documentation:
  - Architecture: https://github.com/kapsa-project/kapsa/tree/main/docs/architecture
  - ADRs: https://github.com/kapsa-project/kapsa/tree/main/docs/adr

For more information, visit: https://github.com/kapsa-project/kapsa
