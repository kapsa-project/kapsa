name: Test Operator

on:
  push:
    branches: [main, develop]
    paths:
      - "operator/**"
      - ".github/workflows/test-operator.yaml"
  pull_request:
    paths:
      - "operator/**"
      - ".github/workflows/test-operator.yaml"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: operator/requirements.txt

      - name: Install dependencies
        working-directory: operator
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run linting
        working-directory: operator
        run: |
          ruff check src/ tests/
          black --check src/ tests/

      - name: Run type checking
        working-directory: operator
        run: |
          mypy src/

      - name: Run unit tests
        working-directory: operator
        run: |
          pytest tests/unit/ \
            --cov=src/kapsa \
            --cov-report=xml \
            --cov-report=term-missing \
            --junit-xml=test-results.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: operator/coverage.xml
          flags: unittests
          name: codecov-operator

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: operator/test-results.xml

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set up kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: kapsa-test

      - name: Install dependencies
        working-directory: operator
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Install CRDs
        run: |
          kubectl apply -f operator/crds/

      - name: Run integration tests
        working-directory: operator
        run: |
          pytest tests/integration/ -v
        env:
          KUBECONFIG: /home/runner/.kube/config
